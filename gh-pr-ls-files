#!/usr/bin/env bash
set -euo pipefail

msg() {
    echo >&2 -e "${1-}"
}

die() {
    local msg=$1
    local code=${2-1} # default exit status 1
    msg "$msg"
    exit "$code"
}

function usage() {
    die "gh pr-ls-files <pr number|url|branch>

list files in the pull request

    -a, --added           show added files in the output
    -d, --deleted         show deleted files in the output
    -m, --modified        show modified files in the output
    -r, --renamed         show renamed files in the output
    -R, --repo            repository name
" "$1"
}

parse_params() {
    ADDED="${PR_LS_FILES_ADDED:-false}"
    DELETED="${PR_LS_FILES_DELETED:-false}"
    MODIFIED="${PR_LS_FILES_MODIFIED:-false}"
    RENAMED="${PR_LS_FILES_RENAMED:-false}"
    PULL_REQUEST=
    REPOSITORY=
    STATUS=()
    while :; do
        case "${1-}" in
        -a | --added)
            ADDED=true
            ;;
        -d | --deleted)
            DELETED=true
            ;;
        -m | --modified)
            MODIFIED=true
            ;;
        -r | --renamed)
            RENAMED=true
            ;;
        -R | --repo)
            REPOSITORY="${2-}"
            shift
            ;;
        -h | --help)
            usage 0
            ;;
        --*| -* )
            echo "${1:-} is invalid option."
            usage 1
            ;;
        *)
            if [ -z "${1:-}" ]; then
                break
            fi
            if [ -n "${PULL_REQUEST}" ]; then
                echo "${1:-} is invalid position option."
                usage 1
            fi
            PULL_REQUEST="${1-}"
            ;;
        esac
        shift
    done
    return 0
}

parse_params "$@"

if [ "${ADDED}" = true ]; then
    STATUS+=('"added"')
fi
if [ "${DELETED}" = true ]; then
    STATUS+=('"removed"')
fi
if [ "${MODIFIED}" = true ]; then
    STATUS+=('"modified"')
fi
if [ "${RENAMED}" = true ]; then
    STATUS+=('"renamed"')
fi

if [ "${#STATUS[@]}" -eq 0 ]; then
    STATUS=('"added"' '"removed"' '"modified"' '"renamed"')
fi

JQ_STATUS=$(IFS=,; echo "${STATUS[*]}")

if [ -z "${REPOSITORY}" ]; then
    REPOSITORY=$(gh repo view --json nameWithOwner --jq '.nameWithOwner')
fi

PULL_REQUEST_NUMBER=$(gh pr view -R "${REPOSITORY}" --json number --jq '.number' "${PULL_REQUEST}")
gh api --paginate "/repos/${REPOSITORY}/pulls/${PULL_REQUEST_NUMBER}/files"
#  --jq '.[] | select(.status | IN('"${JQ_STATUS}"')) | .filename' 
